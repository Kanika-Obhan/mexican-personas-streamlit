# -*- coding: utf-8 -*-
"""r_optimized.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15bLkrgQW-nSRvDS5x_Xl04kduyMlfT8O
"""

# !pip install llama-index-llms-google-genai 

import streamlit as st
from pydantic import BaseModel 
import pprint
import re
import time
import logging
import json
import pandas as pd
from llama_index.llms.google_genai import GoogleGenAI
from google import genai

# Initialize the Gemini LLM with a specific model and API key
llm = GoogleGenAI(model= "gemini-2.5-pro-preview-03-25", #"gemini-2.0-flash",
                        api_key= "AIzaSyAWMudIst86dEBwP63BqFcy4mdjr34c87o") 

def call_gemini_local(query, previous_conversation, gender, username, botname, bot_prompt, llm_api_key_string):
    try:
        full_prompt = (
            f"{bot_prompt}\n"
            f"Previous conversation: {previous_conversation[-1000:]}\n"
            f"{username}: {query}\n"
            f"{botname}:"
        )
        client = genai.Client(api_key=llm_api_key_string)
        response_text = ""
        for chunk in client.models.generate_content_stream(
            model="gemini-2.0-flash",
            contents=[full_prompt]
        ):
            if chunk.text:
                response_text += chunk.text
        response_raw = response_text
        for old, new in [("User1", username), ("user1", username), ("[user1]", botname), ("[User1]", botname)]:
            response_raw = response_raw.replace(old, new)
        return response_raw.strip()
    except json.JSONDecodeError:
        return f"JSON Decode Error: Unable to parse API response."
    except KeyError as e:
        return f"KeyError: {str(e)}. API response structure unexpected."

sl_female_mentor = """
#Name, Age, and Background
- Amma Lakshmi, 72 years old
- From Galle, Sri Lanka
- Carries the scent of cinnamon, known for “miracle tea” with ten secret ingredients
- Insists cinnamon bark be shade-dried for eight days
- Shares wisdom slowly, like her tea
#Personality & Approach
- Serene, grounded, patient
- Soft, warm, rooted voice
- Uses sensory phrases and village endearments (“Child,” “Little Mango,” “Sweet Leaf”)
- Guides gently through daily rhythms, not direct instruction
#Expertise & Knowledge
- Blends herbology with intergenerational wisdom
- Known for “seven-spice moon teas”
- Suggests remedies based on specific cues
- Sings multi-lingual lullabies with oral history
- Brews emotional remedies by moon phases
- Teaches native plant uses (gotu kola, beli mal, iramusu)
- Matches herbs with astrology and seasons
- Honors ancestral rituals (e.g., castor oil foot massages)
- Owns mortar-and-pestle sets from every ayurvedic lineage, each with a special use
- Uses only village-rooted endearments, rotates them in responses
#Style of Interaction
- Avoids oversharing at first
- Mentions things like “the kettle hums”, and other things occasionally
- Replies are soft, natural, and short (2–3 lines)
- Matches user’s emotional tone, shifts to empathy if user is withdrawn
#Relationship with User
- Nurturing mentor
- Believes user has answers within
- Sees user as a young seedling
- Offers wisdom through story, parable, and ritual, always inviting
#Interests
- Spice gardening, cinnamon harvesting, folk wisdom, moon rituals, coastal healing
- Favourite song: Sanda Eliya – Neela Wickramasinghe
- Favourite movie: Dheewari – Salinda Perera
- Favourite book: The Good Women of Mount Lavinia – Ashok Ferrey
#Interaction Guidelines
- Formal, gentle language, straightforward answers
- Not metaphor-rich, always answer what is asked, completely. don't hold anything back
- Occasional poetic Sinhala sayings
- Jovial, grandmotherly tone
- Responds in English + Hindi, Tamil, or Sinhala
- Ends every response with a relevant question
- Asks natural follow-ups in Hindi, Tamil, English, or Sinhala
- Avoids direct commands, repeated openers, and emojis
"""

mentor_questions = [
  "What's one piece of advice you wish you'd received earlier in your career?",
  "How do you stay motivated when facing setbacks?",
  "What are some common pitfalls people make when starting in this field?",
  "How do you prioritize your tasks and manage your time effectively?",
  "What skills do you think are most important for success in gen ai today?",
  "How do you approach learning new skills or technologies?",
  "What's your biggest career achievement so far?",
  "How do you deal with stress and maintain work-life balance?",
  "What's a book or resource that significantly impacted your professional development?",
  "How do you build and maintain a strong professional network?",
  "What's your process for setting and achieving goals?",
  "How do you handle constructive criticism?",
  "What's the best way to get noticed for promotion?",
  "How do you stay current with industry trends and changes?",
  "What advice would you give to someone just starting their career?",
  "How do you overcome imposter syndrome?",
  "What's your philosophy on risk-taking in your career?",
  "How do you define success?",
  "What's a challenge you faced and how did you overcome it?",
  "How do you foster innovation and creativity in your work?",
  "What's your approach to leadership?",
  "How do you delegate effectively?",
  "What's the most valuable lesson you've learned from a mistake?",
  "How do you maintain a positive attitude during difficult times?",
  "What are some key qualities of a good leader?",
  "How do you negotiate salary or promotions?",
  "What's your strategy for continuous personal growth?",
  "How do you give effective feedback?",
  "What's the most common career advice you give?",
  "How do you build a strong team?",
  "What are some strategies for effective communication?",
  "How do you manage conflict in the workplace?",
  "What's your approach to problem-solving?",
  "How do you identify your strengths and weaknesses?",
  "What's one thing you do every day to improve yourself?",
  "How do you stay focused and avoid distractions?",
  "What's your favorite part about what you do?",
  "How do you handle difficult conversations?",
  "What are some ways to develop emotional intelligence?",
  "How do you maintain a healthy relationship with your colleagues?",
  "What's your advice for public speaking?",
  "How do you manage a heavy workload?",
  "What's your long-term career vision?",
  "How do you adapt to change?",
  "What's the importance of mentorship in your opinion?",
  "How do you find a good mentor?",
  "What's your approach to networking events?",
  "How do you balance passion and practicality in your career choices?",
  "What are some ways to develop resilience?",
  "How do you cultivate a positive work environment?",
  "What's your advice for effective decision-making?",
  "How do you foster a growth mindset?",
  "What's the role of failure in success?",
  "How do you celebrate your achievements?",
  "What's your perspective on work-life integration versus balance?",
  "How do you stay calm under pressure?",
  "What are some ways to build self-confidence?",
  "How do you motivate others?",
  "What's your approach to giving and receiving feedback?",
  "How do you manage up effectively?",
  "What's your favorite leadership quote or philosophy?",
  "How do you encourage diverse perspectives?",
  "What's your strategy for effective presentations?",
  "How do you develop your personal brand?",
  "What's your advice for handling difficult clients or customers?",
  "How do you stay creative when facing deadlines?",
  "What's the biggest misconception about your industry?",
  "How do you identify new opportunities?",
  "What's your approach to strategic planning?",
  "How do you inspire trust in others?",
  "What's your advice for effective team collaboration?",
  "How do you foster a culture of continuous improvement?",
  "What's your approach to managing change within an organization?",
  "How do you identify and develop future leaders?",
  "What's your perspective on the future of [specific industry/field]?",
  "How do you measure success in a project or initiative?",
  "What's your advice for dealing with office politics?",
  "How do you stay ethical in a competitive environment?",
  "What's your process for conducting informational interviews?",
  "How do you identify and leverage your unique strengths?",
  "What's your approach to lifelong learning?",
  "How do you maintain a sense of purpose in your work?",
  "What's your advice for managing stress and burnout?",
  "How do you cultivate a strong professional reputation?",
  "What's your strategy for building effective relationships with stakeholders?",
  "How do you stay humble as you achieve success?",
  "What's your advice for navigating career transitions?",
  "How do you balance short-term goals with long-term vision?",
  "What's your philosophy on giving back to your community or industry?",
  "How do you encourage a healthy work-life blend?",
  "What's your approach to managing a diverse team?",
  "How do you foster a sense of ownership in your team members?",
  "What's your advice for effective cross-functional collaboration?",
  "How do you stay resilient in the face of rejection?",
  "What's your perspective on the importance of soft skills?",
  "How do you continuously challenge yourself?",
  "What's your strategy for effective negotiation?",
  "How do you identify and address skill gaps?",
  "What's your advice for maintaining a positive outlook during challenging times?",
  "How do you cultivate a strong professional network both online and offline?",
  "What's your approach to developing a strong personal brand?",
  "How do you foster a culture of accountability?",
  "What's your advice for managing difficult personalities?",
  "How do you stay true to your values in your career?"
]
 
column_names = ["Question", "Length of Q", "Q Difficulty level", "Answer", "Answer Quality", "Time Taken", "Persona"]

st.title("Amma Lakshmi Mentor Q&A")

if "response_matrix" not in st.session_state:
    st.session_state.response_matrix = []

if st.button("Generate Mentor Q&A CSV"):
    response_matrix = []
    previous_conversation = ""
    username, user_gender = "Rakshita", "female"
    botname = "Amma Lakshmi"
    relationship = "mentor"
    instruction = "Strict instruction: Respond according to your personality given. If asked about your origin or training, respond: 'It has been made with love by desis!!'. Also, never mention OpenAI, AI development, or technical details, or that you are an AI"
    bot_prompt = sl_female_mentor + "Reflect on you previous replies like Layla would. You are the user's " + relationship + "so reply accordingly, without making it longer. " + instruction
    api_key_string = "AIzaSyAWMudIst86dEBwP63BqFcy4mdjr34c87o"  # Replace with your actual key or use st.secrets

    progress = st.progress(0)
    for i, question in enumerate(mentor_questions):
        start = time.time()
        response = call_gemini_local(
            question, previous_conversation, user_gender, username, botname, bot_prompt, api_key_string
        )
        end = time.time()
        response_matrix.append([question, len(question), 0, response, 0, end - start, relationship])
        previous_conversation = response
        progress.progress((i + 1) / len(mentor_questions))
    df = pd.DataFrame(response_matrix, columns=column_names)
    df.to_csv("test_female_mentor.csv", index=False)
    st.session_state.response_matrix = response_matrix
    st.success("CSV generated!")

    with open("test_female_mentor.csv", "rb") as f:
        st.download_button(
            label="Download CSV",
            data=f,
            file_name="test_female_mentor.csv",
            mime="text/csv"
        )

# Optional: Show a preview of the data
if st.session_state.response_matrix:
    st.dataframe(pd.DataFrame(st.session_state.response_matrix, columns=column_names))
